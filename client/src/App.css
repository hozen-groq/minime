:root {
  --bg-primary: #2c4143;
  --bg-secondary: #344a4d;
  --text-primary: #e6ddc6;
  --text-secondary: #e6ddc6;
  --accent-primary: #ff5036;
  --accent-secondary: #ebcec9;
  --border-color: #4d6264;
  --card-bg: #3a5053;
  --shadow-color: rgba(0, 0, 0, 0.25);
  --input-bg: #283b3d;
  --button-bg: #ff5036;
  --button-shadow: #eb462d;
  --button-hover: #ff6146;
  --transition-speed: 0.3s;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background: linear-gradient(to bottom, #2c4143, #324749 70%, #3a5356);
  color: var(--text-primary);
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
  line-height: 1.6;
  min-height: 100vh;
  position: relative;
  overflow-x: hidden;
}

body::before {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cpath fill='%23415659' fill-opacity='0.07' d='M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM34 90c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm56-76c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM12 86c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm28-65c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm23-11c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-6 60c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm29 22c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zM32 63c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm57-13c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-9-21c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM60 91c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM35 41c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM12 60c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2z'%3E%3C/path%3E%3C/svg%3E");
  opacity: 0.5;
  z-index: -1;
  pointer-events: none;
}

.app-container {
  max-width: 800px;
  margin: 0 auto;
  padding: 2.5rem 1.5rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  min-height: 100vh;
  position: relative;
}

.app-title {
  display: flex;
  justify-content: center;
  margin-bottom: 2rem;
  padding: 1rem 0;
  position: relative;
}

.title-text {
  font-size: 2rem;
  font-weight: 600;
  color: var(--accent-primary);
  letter-spacing: 2px;
  position: relative;
}

.title-text span {
  display: inline-block;
  position: relative;
  transition: all 0.3s ease;
}

.title-text span {
  color: transparent;
  background-clip: text;
  -webkit-background-clip: text;
  background-color: var(--accent-primary);
  text-shadow: 
    1px 1px 1px #ff5036,
    -1px -1px 1px rgba(0, 0, 0, 0.4),
    2px 2px 4px rgba(0, 0, 0, 0.3);
  transform-style: preserve-3d;
  transform: translateZ(0);
}

.avatar-section {
  display: flex;
  justify-content: center;
  margin-bottom: 4rem;
  position: relative;
}

.avatar-section::before {
  content: "";
  position: absolute;
  width: 300px;
  height: 20px;
  bottom: -20px;
  border-radius: 50%;
  background: rgba(0, 0, 0, 0.2);
  filter: blur(10px);
  z-index: -1;
}

.avatar-container {
  width: 260px;
  height: 260px;
  border-radius: 20px;
  overflow: hidden;
  box-shadow: 
    8px 8px 16px rgba(0, 0, 0, 0.25),
    -8px -8px 16px rgba(255, 255, 255, 0.05);
  position: relative;
  transform-style: preserve-3d;
  transition: transform var(--transition-speed), box-shadow var(--transition-speed);
  border: 6px solid rgba(77, 98, 100, 0.8);
  padding: 4px;
  background: linear-gradient(135deg, #344648, #3a5053);
}

.avatar-container::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: 15px;
  padding: 5px;
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
  -webkit-mask: 
    linear-gradient(#fff 0 0) content-box, 
    linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  pointer-events: none;
}

.avatar-container:hover {
  transform: translateY(-5px) rotate(1deg);
  box-shadow: 
    12px 12px 20px rgba(0, 0, 0, 0.3),
    -8px -8px 16px rgba(255, 255, 255, 0.05);
}

.avatar-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 12px;
}

.audio-error-message {
  margin-top: 0.5rem;
  color: rgba(255, 80, 54, 0.8);
  font-style: italic;
  text-align: right;
}

.interaction-section {
  width: 100%;
  max-width: 600px;
  margin: 0 auto;
  position: relative;
}

.interaction-section form {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.8rem;
}

.question-input {
  width: 100%;
  padding: 1rem 1.5rem;
  font-size: 1rem;
  color: var(--text-primary);
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  background-color: var(--input-bg);
  border: none;
  border-radius: 24px;
  box-shadow: 
    inset 4px 4px 8px rgba(0, 0, 0, 0.3),
    inset -2px -2px 6px rgba(255, 255, 255, 0.05);
  transition: box-shadow var(--transition-speed);
  position: relative;
  z-index: 2;
}

.question-input::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: 24px;
  padding: 1px;
  background: linear-gradient(to right, rgba(214, 50, 25, 0.2), rgba(255, 255, 255, 0.1));
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.question-input:focus {
  outline: none;
  box-shadow: 
    inset 4px 4px 8px rgba(0, 0, 0, 0.3),
    inset -2px -2px 6px rgba(255, 255, 255, 0.05),
    0 0 0 3px rgba(255, 80, 54, 0.3);
}

.question-input:focus::before {
  opacity: 1;
}

.question-input::placeholder {
  color: var(--text-secondary);
  opacity: 0.7;
}

.ask-button {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  font-weight: 500;
  padding: 0.75rem 2.5rem;
  font-size: 1rem;
  background-color: var(--button-bg);
  color: #fff;
  border: none;
  border-radius: 24px;
  cursor: pointer;
  position: relative;
  box-shadow: 
    0 4px 0 var(--button-shadow),
    0 5px 10px rgba(0, 0, 0, 0.2);
  transition: all 0.2s;
  transform: translateY(0);
  letter-spacing: 0.5px;
  z-index: 2;
  overflow: hidden;
}

.ask-button:hover {
  background-color: var(--button-hover);
  transform: translateY(-2px);
  box-shadow: 
    0 6px 0 var(--button-shadow),
    0 8px 15px rgba(0, 0, 0, 0.2);
}

.ask-button:active {
  transform: translateY(2px);
  box-shadow: 
    0 2px 0 var(--button-shadow),
    0 3px 6px rgba(0, 0, 0, 0.2);
}

.ask-button.thinking {
  background-color: var(--button-bg);
  pointer-events: none;
  position: relative;
  color: #fff;
  opacity: 1;
  box-shadow: 
    0 4px 0 var(--button-shadow),
    0 5px 10px rgba(0, 0, 0, 0.2);
}

/* Change the button text to "Thinking..." when in thinking state */
.ask-button.thinking::before {
  content: "Thinking...";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: inherit;
  border-radius: inherit;
  opacity: 1;
}

@keyframes avatarShake {
  0% {
    transform: translateY(0) rotate(0deg);
  }
  25% {
    transform: translateY(-3px) rotate(-2deg);
  }
  50% {
    transform: translateY(0) rotate(2deg);
  }
  75% {
    transform: translateY(-2px) rotate(-1deg);
  }
  100% {
    transform: translateY(0) rotate(0deg);
  }
}

.ask-button:disabled {
  background-color: #a37550;
  color: rgba(255, 255, 255, 0.7);
  transform: translateY(0);
  box-shadow: 
    0 4px 0 #7e5b42,
    0 5px 10px rgba(0, 0, 0, 0.1);
  cursor: not-allowed;
}

.answer-container {
  margin-top: 3rem;
  padding: 1.8rem 2.2rem;
  border-radius: 18px;
  position: relative;
  box-shadow: 
    8px 8px 16px rgba(0, 0, 0, 0.25),
    -8px -8px 16px rgba(255, 255, 255, 0.05);
  background: linear-gradient(to bottom, #3a5053, #344648);
  overflow: hidden;
  border: 1px solid rgba(255, 255, 255, 0.05);
}

.answer-container::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 8px;
  height: 100%;
  background: var(--accent-primary);
  border-radius: 4px 0 0 4px;
}

.answer-container::after {
  content: "";
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.05) 0%, transparent 70%);
  opacity: 0.5;
  pointer-events: none;
}

.answer-text {
  font-size: 1rem;
  line-height: 1.7;
  color: var(--text-primary);
  position: relative;
  z-index: 2;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
}

.ask-button[disabled] {
  position: relative;
  background-color: var(--button-bg);
}

/* Grass and flower elements container */
.landscape {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  height: 180px;
  z-index: -1;
  overflow: hidden;
}

/* Keep your existing mountains */
.mountain {
  position: absolute;
  bottom: 0;
  height: 120px;
  width: 100%;
  background: #293c3f;
  border-radius: 50% 50% 0 0 / 100% 100% 0 0;
  transform: scaleX(3);
}

.mountain-1 {
  left: -20%;
  height: 110px;
  width: 50%;
}

.mountain-2 {
  left: 30%;
  height: 105px;
  width: 50%;
  background: #ff5036;
  opacity: 0.9;
}

.mountain-3 {
  left: 70%;
  height: 80px;
  width: 50%;
}

/* New grass elements */
.grass-container {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 50px;
  z-index: 1;
  display: flex;
  justify-content: space-around;
  padding: 0 20px;
}

.grass-blade {
  position: relative;
  height: 30px;
  width: 8px;
  background: var(--accent-primary);
  border-radius: 0 50px 0 0;
  transform-origin: bottom center;
  margin: 0 5px;
  animation: gentleWave 4s ease-in-out infinite;
  opacity: 0.8;
}

.grass-blade::after {
  content: "";
  position: absolute;
  bottom: 22px;
  left: 0;
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background: var(--accent-secondary);
  transform: translateX(-2px);
}

.grass-blade:nth-child(2n) {
  height: 40px;
  background: var(--card-bg);
  animation-delay: 0.5s;
}

.grass-blade:nth-child(3n) {
  height: 35px;
  width: 6px;
  background: var(--button-bg);
  animation-delay: 1s;
}

.grass-blade:nth-child(4n)::after {
  background: var(--accent-primary);
  width: 10px;
  height: 10px;
}

.grass-blade:nth-child(5n) {
  height: 45px;
  animation-delay: 1.5s;
}

/* Wind swirls */
.wind-swirl {
  position: absolute;
  width: 60px;
  height: 60px;
  border: 3px solid rgba(255, 255, 255, 0.05);
  border-radius: 50%;
  opacity: 0;
  pointer-events: none;
  z-index: 0;
  animation: windMove 10s linear infinite;
}

.wind-swirl:nth-child(1) {
  bottom: 50px;
  left: 10%;
  width: 40px;
  height: 40px;
  animation-delay: 0s;
}

.wind-swirl:nth-child(2) {
  bottom: 100px;
  left: 40%;
  animation-delay: 2s;
}

.wind-swirl:nth-child(3) {
  bottom: 80px;
  right: 20%;
  width: 50px;
  height: 50px;
  animation-delay: 4s;
}

.wind-swirl:nth-child(4) {
  bottom: 60px;
  right: 5%;
  width: 30px;
  height: 30px;
  animation-delay: 6s;
}

.wind-swirl:nth-child(5) {
  bottom: 120px;
  left: 25%;
  width: 45px;
  height: 45px;
  animation-delay: 8s;
}

/* Animation for grass */
@keyframes gentleWave {
  0% {
    transform: rotate(-2deg);
  }
  50% {
    transform: rotate(5deg);
  }
  100% {
    transform: rotate(-2deg);
  }
}

/* Animation for wind swirls */
@keyframes windMove {
  0% {
    transform: translateY(0) scale(0.1) rotate(0deg);
    opacity: 0;
  }
  20% {
    opacity: 0.4;
  }
  80% {
    opacity: 0.2;
  }
  100% {
    transform: translateY(-120px) scale(1.5) rotate(360deg);
    opacity: 0;
  }
}

/* Enhanced animations for thinking state */
body.thinking .wind-swirl {
  animation: windMove 2s ease-in-out infinite;
}

body.thinking .wind-curl {
  animation: windCurlMove 2.5s ease-in-out infinite;
}

/* Animation for wind curls when thinking */
@keyframes windCurlMove {
  0% {
    transform: translateX(0) rotate(0deg);
  }
  50% {
    transform: translateX(15px) rotate(3deg);
  }
  100% {
    transform: translateX(0) rotate(0deg);
  }
}